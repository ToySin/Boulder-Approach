//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: boulder_service.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Api_BoulderApproachServiceClient`, then call methods of this protocol to make API calls.
internal protocol Api_BoulderApproachServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Api_BoulderApproachServiceClientInterceptorFactoryProtocol? { get }

  func getApproach(
    _ request: Api_GetApproachRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_GetApproachRequest, Api_GetApproachResponse>

  func getBoulder(
    _ request: Api_GetBoulderRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_GetBoulderRequest, Api_GetBoulderResponse>

  func listBoulders(
    _ request: Api_ListBouldersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Api_ListBouldersRequest, Api_ListBouldersResponse>
}

extension Api_BoulderApproachServiceClientProtocol {
  internal var serviceName: String {
    return "api.BoulderApproachService"
  }

  /// Unary call to GetApproach
  ///
  /// - Parameters:
  ///   - request: Request to send to GetApproach.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getApproach(
    _ request: Api_GetApproachRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_GetApproachRequest, Api_GetApproachResponse> {
    return self.makeUnaryCall(
      path: Api_BoulderApproachServiceClientMetadata.Methods.getApproach.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetApproachInterceptors() ?? []
    )
  }

  /// Unary call to GetBoulder
  ///
  /// - Parameters:
  ///   - request: Request to send to GetBoulder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getBoulder(
    _ request: Api_GetBoulderRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_GetBoulderRequest, Api_GetBoulderResponse> {
    return self.makeUnaryCall(
      path: Api_BoulderApproachServiceClientMetadata.Methods.getBoulder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBoulderInterceptors() ?? []
    )
  }

  /// Unary call to ListBoulders
  ///
  /// - Parameters:
  ///   - request: Request to send to ListBoulders.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func listBoulders(
    _ request: Api_ListBouldersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Api_ListBouldersRequest, Api_ListBouldersResponse> {
    return self.makeUnaryCall(
      path: Api_BoulderApproachServiceClientMetadata.Methods.listBoulders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListBouldersInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Api_BoulderApproachServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Api_BoulderApproachServiceNIOClient")
internal final class Api_BoulderApproachServiceClient: Api_BoulderApproachServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Api_BoulderApproachServiceClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Api_BoulderApproachServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the api.BoulderApproachService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Api_BoulderApproachServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Api_BoulderApproachServiceNIOClient: Api_BoulderApproachServiceClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Api_BoulderApproachServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the api.BoulderApproachService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Api_BoulderApproachServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Api_BoulderApproachServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Api_BoulderApproachServiceClientInterceptorFactoryProtocol? { get }

  func makeGetApproachCall(
    _ request: Api_GetApproachRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_GetApproachRequest, Api_GetApproachResponse>

  func makeGetBoulderCall(
    _ request: Api_GetBoulderRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_GetBoulderRequest, Api_GetBoulderResponse>

  func makeListBouldersCall(
    _ request: Api_ListBouldersRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Api_ListBouldersRequest, Api_ListBouldersResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Api_BoulderApproachServiceAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Api_BoulderApproachServiceClientMetadata.serviceDescriptor
  }

  internal var interceptors: Api_BoulderApproachServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeGetApproachCall(
    _ request: Api_GetApproachRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_GetApproachRequest, Api_GetApproachResponse> {
    return self.makeAsyncUnaryCall(
      path: Api_BoulderApproachServiceClientMetadata.Methods.getApproach.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetApproachInterceptors() ?? []
    )
  }

  internal func makeGetBoulderCall(
    _ request: Api_GetBoulderRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_GetBoulderRequest, Api_GetBoulderResponse> {
    return self.makeAsyncUnaryCall(
      path: Api_BoulderApproachServiceClientMetadata.Methods.getBoulder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBoulderInterceptors() ?? []
    )
  }

  internal func makeListBouldersCall(
    _ request: Api_ListBouldersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Api_ListBouldersRequest, Api_ListBouldersResponse> {
    return self.makeAsyncUnaryCall(
      path: Api_BoulderApproachServiceClientMetadata.Methods.listBoulders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListBouldersInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Api_BoulderApproachServiceAsyncClientProtocol {
  internal func getApproach(
    _ request: Api_GetApproachRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetApproachResponse {
    return try await self.performAsyncUnaryCall(
      path: Api_BoulderApproachServiceClientMetadata.Methods.getApproach.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetApproachInterceptors() ?? []
    )
  }

  internal func getBoulder(
    _ request: Api_GetBoulderRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_GetBoulderResponse {
    return try await self.performAsyncUnaryCall(
      path: Api_BoulderApproachServiceClientMetadata.Methods.getBoulder.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBoulderInterceptors() ?? []
    )
  }

  internal func listBoulders(
    _ request: Api_ListBouldersRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Api_ListBouldersResponse {
    return try await self.performAsyncUnaryCall(
      path: Api_BoulderApproachServiceClientMetadata.Methods.listBoulders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListBouldersInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Api_BoulderApproachServiceAsyncClient: Api_BoulderApproachServiceAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Api_BoulderApproachServiceClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Api_BoulderApproachServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Api_BoulderApproachServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getApproach'.
  func makeGetApproachInterceptors() -> [ClientInterceptor<Api_GetApproachRequest, Api_GetApproachResponse>]

  /// - Returns: Interceptors to use when invoking 'getBoulder'.
  func makeGetBoulderInterceptors() -> [ClientInterceptor<Api_GetBoulderRequest, Api_GetBoulderResponse>]

  /// - Returns: Interceptors to use when invoking 'listBoulders'.
  func makeListBouldersInterceptors() -> [ClientInterceptor<Api_ListBouldersRequest, Api_ListBouldersResponse>]
}

internal enum Api_BoulderApproachServiceClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "BoulderApproachService",
    fullName: "api.BoulderApproachService",
    methods: [
      Api_BoulderApproachServiceClientMetadata.Methods.getApproach,
      Api_BoulderApproachServiceClientMetadata.Methods.getBoulder,
      Api_BoulderApproachServiceClientMetadata.Methods.listBoulders,
    ]
  )

  internal enum Methods {
    internal static let getApproach = GRPCMethodDescriptor(
      name: "GetApproach",
      path: "/api.BoulderApproachService/GetApproach",
      type: GRPCCallType.unary
    )

    internal static let getBoulder = GRPCMethodDescriptor(
      name: "GetBoulder",
      path: "/api.BoulderApproachService/GetBoulder",
      type: GRPCCallType.unary
    )

    internal static let listBoulders = GRPCMethodDescriptor(
      name: "ListBoulders",
      path: "/api.BoulderApproachService/ListBoulders",
      type: GRPCCallType.unary
    )
  }
}

/// To build a server, implement a class that conforms to this protocol.
internal protocol Api_BoulderApproachServiceProvider: CallHandlerProvider {
  var interceptors: Api_BoulderApproachServiceServerInterceptorFactoryProtocol? { get }

  func getApproach(request: Api_GetApproachRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetApproachResponse>

  func getBoulder(request: Api_GetBoulderRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_GetBoulderResponse>

  func listBoulders(request: Api_ListBouldersRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Api_ListBouldersResponse>
}

extension Api_BoulderApproachServiceProvider {
  internal var serviceName: Substring {
    return Api_BoulderApproachServiceServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "GetApproach":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetApproachRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetApproachResponse>(),
        interceptors: self.interceptors?.makeGetApproachInterceptors() ?? [],
        userFunction: self.getApproach(request:context:)
      )

    case "GetBoulder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetBoulderRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetBoulderResponse>(),
        interceptors: self.interceptors?.makeGetBoulderInterceptors() ?? [],
        userFunction: self.getBoulder(request:context:)
      )

    case "ListBoulders":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_ListBouldersRequest>(),
        responseSerializer: ProtobufSerializer<Api_ListBouldersResponse>(),
        interceptors: self.interceptors?.makeListBouldersInterceptors() ?? [],
        userFunction: self.listBoulders(request:context:)
      )

    default:
      return nil
    }
  }
}

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Api_BoulderApproachServiceAsyncProvider: CallHandlerProvider, Sendable {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Api_BoulderApproachServiceServerInterceptorFactoryProtocol? { get }

  func getApproach(
    request: Api_GetApproachRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetApproachResponse

  func getBoulder(
    request: Api_GetBoulderRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_GetBoulderResponse

  func listBoulders(
    request: Api_ListBouldersRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Api_ListBouldersResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Api_BoulderApproachServiceAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Api_BoulderApproachServiceServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Api_BoulderApproachServiceServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Api_BoulderApproachServiceServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "GetApproach":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetApproachRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetApproachResponse>(),
        interceptors: self.interceptors?.makeGetApproachInterceptors() ?? [],
        wrapping: { try await self.getApproach(request: $0, context: $1) }
      )

    case "GetBoulder":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_GetBoulderRequest>(),
        responseSerializer: ProtobufSerializer<Api_GetBoulderResponse>(),
        interceptors: self.interceptors?.makeGetBoulderInterceptors() ?? [],
        wrapping: { try await self.getBoulder(request: $0, context: $1) }
      )

    case "ListBoulders":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Api_ListBouldersRequest>(),
        responseSerializer: ProtobufSerializer<Api_ListBouldersResponse>(),
        interceptors: self.interceptors?.makeListBouldersInterceptors() ?? [],
        wrapping: { try await self.listBoulders(request: $0, context: $1) }
      )

    default:
      return nil
    }
  }
}

internal protocol Api_BoulderApproachServiceServerInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when handling 'getApproach'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetApproachInterceptors() -> [ServerInterceptor<Api_GetApproachRequest, Api_GetApproachResponse>]

  /// - Returns: Interceptors to use when handling 'getBoulder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetBoulderInterceptors() -> [ServerInterceptor<Api_GetBoulderRequest, Api_GetBoulderResponse>]

  /// - Returns: Interceptors to use when handling 'listBoulders'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeListBouldersInterceptors() -> [ServerInterceptor<Api_ListBouldersRequest, Api_ListBouldersResponse>]
}

internal enum Api_BoulderApproachServiceServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "BoulderApproachService",
    fullName: "api.BoulderApproachService",
    methods: [
      Api_BoulderApproachServiceServerMetadata.Methods.getApproach,
      Api_BoulderApproachServiceServerMetadata.Methods.getBoulder,
      Api_BoulderApproachServiceServerMetadata.Methods.listBoulders,
    ]
  )

  internal enum Methods {
    internal static let getApproach = GRPCMethodDescriptor(
      name: "GetApproach",
      path: "/api.BoulderApproachService/GetApproach",
      type: GRPCCallType.unary
    )

    internal static let getBoulder = GRPCMethodDescriptor(
      name: "GetBoulder",
      path: "/api.BoulderApproachService/GetBoulder",
      type: GRPCCallType.unary
    )

    internal static let listBoulders = GRPCMethodDescriptor(
      name: "ListBoulders",
      path: "/api.BoulderApproachService/ListBoulders",
      type: GRPCCallType.unary
    )
  }
}
